name: Build and deploy infrastructure for AWS and GCP

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy_AWS:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, '[AWS]')
    environment: general

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure aws
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: Build LogsProcessingLambda
        working-directory: ./aws/lambdas/LogsProcessingLambda
        run: pwsh ./build_application.ps1
        shell: pwsh

      - name: Build SNSPublisherLambda
        working-directory: ./aws/lambdas/SNSPublisherLambda
        run: pwsh ./build_application.ps1
        shell: pwsh

      - name: Build TestingLambdaDotnet
        working-directory: ./aws/lambdas/TestingLambdaDotnet
        run: pwsh ./build_application.ps1
        shell: pwsh

      - name: Build TestingLambdaJava
        working-directory: ./aws/lambdas/TestingLambdaJava
        run: pwsh ./build_application.ps1
        shell: pwsh

      - name: Build TestingLambdaNode
        working-directory: ./aws/lambdas/TestingLambdaNode
        run: pwsh ./build_application.ps1
        shell: pwsh

      - name: Build TestingLambdaRuby
        working-directory: ./aws/lambdas/TestingLambdaRuby
        run: pwsh ./build_application.ps1
        shell: pwsh

      - name: Build TestingLambdaPython
        working-directory: ./aws/lambdas/TestingLambdaPython
        run: pwsh ./build_application.ps1
        shell: pwsh

      - name: Deploy LogsProcessingLambda
        working-directory: ./aws/lambdas/LogsProcessingLambda
        run: pwsh ./deploy_application.ps1
        shell: pwsh

      - name: Deploy SNSPublisherLambda
        working-directory: ./aws/lambdas/SNSPublisherLambda
        run: pwsh ./deploy_application.ps1
        shell: pwsh

      - name: Deploy TestingLambdaDotnet
        working-directory: ./aws/lambdas/TestingLambdaDotnet
        run: pwsh ./deploy_application.ps1
        shell: pwsh

      - name: Deploy TestingLambdaJava
        working-directory: ./aws/lambdas/TestingLambdaJava
        run: pwsh ./deploy_application.ps1
        shell: pwsh

      - name: Deploy TestingLambdaPython
        working-directory: ./aws/lambdas/TestingLambdaPython
        run: pwsh ./deploy_application.ps1
        shell: pwsh

      - name: Deploy TestingLambdaRuby
        working-directory: ./aws/lambdas/TestingLambdaRuby
        run: pwsh ./deploy_application.ps1
        shell: pwsh

      - name: Deploy TestingLambdaNode
        working-directory: ./aws/lambdas/TestingLambdaNode
        run: pwsh ./deploy_application.ps1
        shell: pwsh

      - name: Deploy cloudformation
        working-directory: ./aws/deployment
        run: pwsh ./deploy_stack.ps1
        shell: pwsh

  build_and_deploy_GCP:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, '[GCP]')
    environment: general
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Install Google Cloud SDK
        run: |
          curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
          sudo apt-add-repository "deb https://packages.cloud.google.com/apt cloud-sdk main"
          sudo apt-get update && sudo apt-get install google-cloud-sdk

      - name: Install Terraform
        run: |
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt-get update
          sudo apt-get install terraform

      - name: Set up Google Cloud authentication
        run: |
          echo ${{ secrets.GCP_CREDENTIALS }} | base64 --decode > $HOME/.config/gcloud/application_default_credentials.json
          gcloud auth activate-service-account --key-file=$HOME/.config/gcloud/application_default_credentials.json
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}

      - name: Build LogsProcessingFunction
        working-directory: ./gcp/functions/LogsProcessingFunction
        run: pwsh ./build_application.ps1
        shell: pwsh

      - name: Build TestingFunctionDotnet
        working-directory: ./gcp/functions/TestingFunctionDotnet
        run: pwsh ./build_application.ps1
        shell: pwsh

      - name: Build TestingFunctionJava
        working-directory: ./gcp/functions/TestingFunctionJava
        run: pwsh ./build_application.ps1
        shell: pwsh

      - name: Build TestingFunctionNode
        working-directory: ./gcp/functions/TestingFunctionNode
        run: pwsh ./build_deploy_application.ps1
        shell: pwsh

      - name: Build TestingFunctionRuby
        working-directory: ./gcp/functions/TestingFunctionRuby
        run: pwsh ./build_deploy_application.ps1
        shell: pwsh

      - name: Build and Deploy TestingFunctionPython
        working-directory: ./gcp/functions/TestingFunctionPython
        run: pwsh ./build_deploy_application.ps1
        shell: pwsh

      - name: Deploy LogsProcessingFunction
        working-directory: ./gcp/functions/LogsProcessingFunction
        run: pwsh ./deploy_application.ps1
        shell: pwsh

      - name: Deploy TestingFunctionDotnet
        working-directory: ./gcp/functions/TestingFunctionDotnet
        run: pwsh ./deploy_application.ps1
        shell: pwsh

      - name: Deploy TestingFunctionJava
        working-directory: ./gcp/functions/TestingFunctionJava
        run: pwsh ./deploy_application.ps1
        shell: pwsh

      - name: Deploy Terraform
        working-directory: ./gcp/deployment
        run: pwsh ./deploy_infrastructure.ps1
        shell: pwsh
